#define BLYNK_TEMPLATE_ID "TMPL3jRssuUcA"
#define BLYNK_TEMPLATE_NAME "Flowmeter"
#define BLYNK_AUTH_TOKEN "M1vTo_KTKiHjQvs19LjIF4FTmIFbTfpR"

#define BLYNK_PRINT Serial
#include <WiFi.h>
#include <BlynkSimpleEsp32.h>
#include <Servo.h>
int SENSOR = 25;

long currentMillis = 0;
long previousMillis = 0;
int interval = 1000;
boolean ledState = LOW;
float calibrationFactor = 0.15;
volatile byte pulseCount;
byte pulse1Sec = 0;
float flowRate;
unsigned int flowMilliLitres;
unsigned long totalMilliLitres;

void IRAM_ATTR pulseCounter()
{
  pulseCount++;
}




Servo servo1, servo2, servo3, servo4, servo5;

char auth[] = BLYNK_AUTH_TOKEN;
char ssid[] = "Elconics"; // Change your WiFi/Hotspot Name
char pass[] = "Elconics@123"; // Change your WiFi/Hotspot Password

int button = 5;

BLYNK_WRITE(V0)
{
  // Function to handle data from virtual pin V0
  int pinValue = param.asInt();
  digitalWrite(2, pinValue);
}

BLYNK_WRITE(V3)
{
  // Function to handle data from virtual pin V3
  int s3 = param.asInt();
  servo4.write(s3);
  Blynk.virtualWrite(V8, s3);
  Serial.println(s3);
}

BLYNK_WRITE(V4)
{
  // Function to handle data from virtual pin V4
  int s4 = param.asInt();
  servo5.write(s4);
  Blynk.virtualWrite(V9, s4);
}

void setup() {
  
  Serial.begin(115200);
    pinMode(2, OUTPUT);
  pinMode(button, INPUT);
  digitalWrite(button, INPUT_PULLUP);
  servo4.attach(4);
  servo5.attach(13);
  
  // Uncomment the lines below if you have servo1, servo2, or servo3 attached
  // servo1.attach(15);
  // servo2.attach(16);
  // servo3.attach(17);

  Blynk.begin(auth, ssid, pass); // Connect to Blynk server
  delay(2000); // Splash screen delay
  pinMode(SENSOR, INPUT_PULLUP);

  pulseCount = 0;
  flowRate = 0.0;
  flowMilliLitres = 0;
  totalMilliLitres = 0;
  previousMillis = 0;

  attachInterrupt(digitalPinToInterrupt(SENSOR), pulseCounter, FALLING);

}

void loop() {

  Blynk.run(); // Continuously process Blynk-related tasks

  //int state = digitalRead(button);
  
  // Generate random potentiometer value and send it to virtual pin V1


  currentMillis = millis();
  if (currentMillis - previousMillis > interval) {
    pulse1Sec = pulseCount;
    pulseCount = 0;

    flowRate = ((1000.0 / (millis() - previousMillis)) * pulse1Sec) / calibrationFactor;
    previousMillis = millis();

    flowMilliLitres = (flowRate / 60) * 1000;

    totalMilliLitres += flowMilliLitres;

    Serial.print("Flow rate: ");
    Serial.print(int(flowRate));
    Serial.print("L/min");
    Serial.print("\t");

    Serial.print("Output Liquid Quantity: ");
    Serial.print(totalMilliLitres);
    Serial.print("mL / ");
    Serial.print(totalMilliLitres / 1000);
    Serial.println("L");

 
  Blynk.virtualWrite(V1, flowRate);
  Blynk.virtualWrite(V4,(totalMilliLitres / 1000));
  }

  delay(100); //Wait for 5 seconds before logging the next data
}


