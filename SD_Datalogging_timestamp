// This is code for data logging with timestamp 
// components used SD card module | ESP32 | RTC module 

#include <SPI.h>
#include <Wire.h>
#include "RTClib.h"
#include <SD.h>

RTC_DS3231 rtc;
char daysOfTheWeek[7][12] = {"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"};
File myFile;
const int CS = 5;

void setup()
{
  Serial.begin(9600);

  // Initialize RTC
  if (!rtc.begin())
  {
    Serial.println("Couldn't find RTC");
    while (1);
  }

  // Set the time if RTC lost power
  if (rtc.lostPower())
  {
    Serial.println("RTC lost power! Setting up time...");
    rtc.adjust(DateTime(F(__DATE__), F(__TIME__)));
  }

  Serial.println("Initializing SD card...");
  if (!SD.begin(CS))
  {
    Serial.println("SD card initialization failed!");
    while (1);
  }
  Serial.println("SD card initialized.");
}

void loop()
{
  DateTime now = rtc.now();
  Serial.print(now.hour(), DEC);
  Serial.print(":");
  Serial.print(now.minute(), DEC);
  Serial.print(":");
  Serial.print(now.second(), DEC);
  Serial.print(" ");

  Serial.print(now.day(), DEC);
  Serial.print(":");
  Serial.print(now.month(), DEC);
  Serial.print(":");
  Serial.print(now.year(), DEC);
  Serial.print("  ");

  Serial.println(daysOfTheWeek[now.dayOfTheWeek()]);
  delay(1000);

  // Generate timestamp and random data
  char timestamp[25];
  sprintf(timestamp, "%02d:%02d:%02d %02d:%02d:%02d", now.day(), now.month(), now.year(), now.hour(), now.minute(), now.second());
  int randomData = random(100);

  // Create message with timestamp and data
  char message[50];
  sprintf(message, "%s - Data: %d", timestamp, randomData);

  // Write message to file
  WriteFile("/test.txt", message);
  delay(100);

  // Read and print file contents
  ReadFile("/test.txt");

  delay(1000);
}

void WriteFile(const char *path, const char *message)
{
  myFile = SD.open(path, FILE_WRITE);
  if (myFile)
  {
    Serial.printf("Writing to %s ", path);
    myFile.println(message);
    myFile.close();
    Serial.println("completed.");
  }
  else
  {
    Serial.println("error opening file ");
    Serial.println(path);
  }
}

void ReadFile(const char *path)
{
  myFile = SD.open(path);
  if (myFile)
  {
    Serial.printf("Reading file from %s\n", path);
    while (myFile.available())
    {
      Serial.write(myFile.read());
    }
    myFile.close();
  }
  else
  {
    Serial.println("error opening file");
  }
}
